@model IEnumerable<TodoList.Models.TodoItem>

@{
    ViewData["Title"] = "To-Do List";
}

<style>
    .completed {
    text-decoration: line-through;
    color: violet;
    }
</style>

<h1>To-Do List</h1>

@* filter Button  *@
<form asp-controller="ToDoItems" asp-action="Index" method="get" class="form-check-inline mb-3">
    <select name="categoryFilter" class="form-control me-2">
        <option value="">All Categories</option>

        @foreach (var cat in ViewBag.Categories as List<string>)
        {
            var isSelected = cat.ToString() == ViewData["CategoryFilter"]?.ToString() ? "selected" : null; 
            <option value="@cat" selected=@isSelected>@cat</option>
        }
    </select>

    <select name="priorityFilter" class="form-control me-2">
        <option value="">All Priorities</option>
        @foreach (var p in ViewBag.Priorities as List<int>)
        {
            var selected = p.ToString() == ViewData["PriorityFilter"]?.ToString() ? "selected" : null; 
            <option value="@p" selected="@selected">@p</option>
        }
    </select>
    @* Sorting *@
    <select name="sortOrder" class="form-control me-2">
        <option value"">Sort by Title</option>
        <option value="priority_asc" selected=@(ViewData["CurrentSort"]?.ToString() == "priority_asc" ? "selected" : "")> Priority ↑ </option>
        <option value="priority_desc" selected=@(ViewData["CurrentSort"]?.ToString() == "priority_desc" ? "selected" : "")> Priority ↓ </option>
    </select>

    <input type="submit" value="Apply" class="btn btn-primary" />
</form>


<div class="min-h-screen bg-gradient-to-r from-purple-200 via-purple-100 to-purple-200 p-8">

    <div class="max-w-4xl mx-auto bg-white shadow-lg rounded-2xl p-6">
        <h1 class="text-3xl font-bold text-primary-dark mb-4">My To-Do List</h1>

    <div class="flex justify-between items-center mb-4">
        <a asp-action="Create" 
        class="bg-primary hover:bg-primary-dark text-white px-4 py-2 rounded-lg shadow">
            + Add New Task
        </a>
    </div>

    <table class="w-full table-auto border-collapse">
        <thead>
            <tr class="bg-primary-light text-left text-white">
                <th class="p-3 text-black">Task</th>
                <th class="p-3 text-black">Category</th>
                <th class="p-3 text-black">Priority</th>
                <th class="p-3 text-black">Completed</th>
                <th class="p-3 text-black">Actions</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr class="border-b hover:bg-purple-50">
                    <td class="p-3 todo-title @(item.IsCompleted ? "completed" : "")" data-id="@item.Id">@item.Title</td>
                    <td class="p-3">@item.Category</td>
                    <td class="p-3">@item.Priority</td>
                    <td class="p-3">
                        <input type="checkbox" class="toggle-complete" data-id="@item.Id" @(item.IsCompleted ? "checked" : "") />
                    </td>
                    <td class="p-3">
                         <a asp-action="Edit" asp-route-id="@item.Id" class="text-blue-600 hover:underline mr-2">Edit</a>
                         <a asp-action="Delete" asp-route-id="@item.Id" class="text-red-600 hover:underline mr-2">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    </div>
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(function () {
            $(".toggle-complete").change(function () {
                const checkbox = $(this);
                const id = checkbox.data("id");
            $.ajax({
                url:'@Url.Action("ToggleCompleteAjax", "ToDoItems")',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(id),
                success: function (response) {
                    if (response.success) {
                        const titleCell = $(".todo-title[data-id='" + id  + "']");
                        if (response.isCompleted) {
                            titleCell.addClass("completed");
                        } else {
                            titleCell.removeClass("completed");
                        }
                    } else {
                        alert("Something went wrong.");
                    }
                }
            });
           });
        });
    </script>
}
