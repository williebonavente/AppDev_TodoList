@model IEnumerable<TodoList.Models.TodoItem>

@{
    ViewData["Title"] = "To-Do List";
}

<style>
    .completed {
        text-decoration: line-through;
        color: violet;
    }
</style>

<h1>To-Do List</h1>

@* filter Button  *@
<form asp-controller="ToDoItems" asp-action="Index" method="get" class="form-check-inline mb-3">
    <select name="categoryFilter" class="form-control me-2">
        <option value="">All Categories</option>

        @foreach (var cat in ViewBag.Categories as List<string>)
        {
            var isSelected = cat.ToString() == ViewData["CategoryFilter"]?.ToString() ? "selected" : null; 
            <option value="@cat" selected=@isSelected>@cat</option>
        }
    </select>

    <select name="priorityFilter" class="form-control me-2">
        <option value="">All Priorities</option>
        @foreach (var p in ViewBag.Priorities as List<int>)
        {
            var selected = p.ToString() == ViewData["PriorityFilter"]?.ToString() ? "selected" : null; 
            <option value="@p" selected="@selected">@p</option>
        }
    </select>
@* Sorting *@
    <select name="sortOrder" class="form-control me-2">
        <option value"">Sort by Title</option>
        <option value="priority_asc" selected=@(ViewData["CurrentSort"]?.ToString() == "priority_asc" ? "selected" : "")> Priority ↑ </option>
        <option value="priority_desc" selected=@(ViewData["CurrentSort"]?.ToString() == "priority_desc" ? "selected" : "")> Priority ↓ </option>
    </select>

    <input type="submit" value="Apply" class="btn btn-primary" />
</form>


<p>
    <a asp-action="Create" class="btn btn-success">Add New To-Do</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Category</th>
            <th>Priority</th>
            <th>Completed</th>
            <th>Actions</th>
           </tr> 
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td class="todo-title @(item.IsCompleted ? "completed" :"")" data-id="@item.Id">
                @item.Title
            </td>
           <td>@item.Category</td> 
           <td>@item.Priority</td> 
           <td>
               <form asp-action="ToggleComplete" method="post" style="display:inline;">
                   <input type="hidden" name="id" value="@item.Id" />
                   @* <input type="checkbox" onchange="this.form.submit()" @(item.IsCompleted ? "checked" : "") /> *@
                   <input type="checkbox" class="toggle-complete" data-id="@item.Id" @(item.IsCompleted ? "checked" : "") />
               </form>
           </td> 
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(function () {
            $(".toggle-complete").change(function () {
                const checkbox = $(this);
                const id = checkbox.data("id");
            $.ajax({
                url:'@Url.Action("ToggleCompleteAjax", "ToDoItems")',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(id),
                success: function (response) {
                    if (response.success) {
                        const titleCell = $(".todo-title[data-id='" + id  + "']");
                        if (response.isCompleted) {
                            titleCell.addClass("completed");
                        } else {
                            titleCell.removeClass("completed");
                        }
                    } else {
                        alert("Something went wrong.");
                    }
                }
            });
           });
        });
    </script>
}
